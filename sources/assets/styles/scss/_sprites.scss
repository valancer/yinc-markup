/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$s-btn-favorite-name: 's-btn_favorite';
$s-btn-favorite-x: 0px;
$s-btn-favorite-y: 34px;
$s-btn-favorite-offset-x: 0px;
$s-btn-favorite-offset-y: -34px;
$s-btn-favorite-width: 44px;
$s-btn-favorite-height: 44px;
$s-btn-favorite-total-width: 130px;
$s-btn-favorite-total-height: 98px;
$s-btn-favorite-image: '/assets/images/sprites.png';
$s-btn-favorite: (0px, 34px, 0px, -34px, 44px, 44px, 130px, 98px, '/assets/images/sprites.png', 's-btn_favorite', );
$s-btn-favorite-selected-name: 's-btn_favorite_selected';
$s-btn-favorite-selected-x: 86px;
$s-btn-favorite-selected-y: 0px;
$s-btn-favorite-selected-offset-x: -86px;
$s-btn-favorite-selected-offset-y: 0px;
$s-btn-favorite-selected-width: 44px;
$s-btn-favorite-selected-height: 44px;
$s-btn-favorite-selected-total-width: 130px;
$s-btn-favorite-selected-total-height: 98px;
$s-btn-favorite-selected-image: '/assets/images/sprites.png';
$s-btn-favorite-selected: (86px, 0px, -86px, 0px, 44px, 44px, 130px, 98px, '/assets/images/sprites.png', 's-btn_favorite_selected', );
$s-btn-play01-name: 's-btn_play01';
$s-btn-play01-x: 0px;
$s-btn-play01-y: 0px;
$s-btn-play01-offset-x: 0px;
$s-btn-play01-offset-y: 0px;
$s-btn-play01-width: 81px;
$s-btn-play01-height: 29px;
$s-btn-play01-total-width: 130px;
$s-btn-play01-total-height: 98px;
$s-btn-play01-image: '/assets/images/sprites.png';
$s-btn-play01: (0px, 0px, 0px, 0px, 81px, 29px, 130px, 98px, '/assets/images/sprites.png', 's-btn_play01', );
$s-icon-deductions-name: 's-icon_deductions';
$s-icon-deductions-x: 86px;
$s-icon-deductions-y: 49px;
$s-icon-deductions-offset-x: -86px;
$s-icon-deductions-offset-y: -49px;
$s-icon-deductions-width: 26px;
$s-icon-deductions-height: 26px;
$s-icon-deductions-total-width: 130px;
$s-icon-deductions-total-height: 98px;
$s-icon-deductions-image: '/assets/images/sprites.png';
$s-icon-deductions: (86px, 49px, -86px, -49px, 26px, 26px, 130px, 98px, '/assets/images/sprites.png', 's-icon_deductions', );
$s-icon-lead-name: 's-icon_lead';
$s-icon-lead-x: 49px;
$s-icon-lead-y: 34px;
$s-icon-lead-offset-x: -49px;
$s-icon-lead-offset-y: -34px;
$s-icon-lead-width: 26px;
$s-icon-lead-height: 26px;
$s-icon-lead-total-width: 130px;
$s-icon-lead-total-height: 98px;
$s-icon-lead-image: '/assets/images/sprites.png';
$s-icon-lead: (49px, 34px, -49px, -34px, 26px, 26px, 130px, 98px, '/assets/images/sprites.png', 's-icon_lead', );
$s-icon-yinc-name: 's-icon_yinc';
$s-icon-yinc-x: 0px;
$s-icon-yinc-y: 83px;
$s-icon-yinc-offset-x: 0px;
$s-icon-yinc-offset-y: -83px;
$s-icon-yinc-width: 17px;
$s-icon-yinc-height: 15px;
$s-icon-yinc-total-width: 130px;
$s-icon-yinc-total-height: 98px;
$s-icon-yinc-image: '/assets/images/sprites.png';
$s-icon-yinc: (0px, 83px, 0px, -83px, 17px, 15px, 130px, 98px, '/assets/images/sprites.png', 's-icon_yinc', );
$s-btn-favorite-2x-name: 's-btn_favorite@2x';
$s-btn-favorite-2x-x: 0px;
$s-btn-favorite-2x-y: 68px;
$s-btn-favorite-2x-offset-x: 0px;
$s-btn-favorite-2x-offset-y: -68px;
$s-btn-favorite-2x-width: 88px;
$s-btn-favorite-2x-height: 88px;
$s-btn-favorite-2x-total-width: 260px;
$s-btn-favorite-2x-total-height: 196px;
$s-btn-favorite-2x-image: '/assets/images/sprites@2x.png';
$s-btn-favorite-2x: (0px, 68px, 0px, -68px, 88px, 88px, 260px, 196px, '/assets/images/sprites@2x.png', 's-btn_favorite@2x', );
$s-btn-favorite-selected-2x-name: 's-btn_favorite_selected@2x';
$s-btn-favorite-selected-2x-x: 172px;
$s-btn-favorite-selected-2x-y: 0px;
$s-btn-favorite-selected-2x-offset-x: -172px;
$s-btn-favorite-selected-2x-offset-y: 0px;
$s-btn-favorite-selected-2x-width: 88px;
$s-btn-favorite-selected-2x-height: 88px;
$s-btn-favorite-selected-2x-total-width: 260px;
$s-btn-favorite-selected-2x-total-height: 196px;
$s-btn-favorite-selected-2x-image: '/assets/images/sprites@2x.png';
$s-btn-favorite-selected-2x: (172px, 0px, -172px, 0px, 88px, 88px, 260px, 196px, '/assets/images/sprites@2x.png', 's-btn_favorite_selected@2x', );
$s-btn-play01-2x-name: 's-btn_play01@2x';
$s-btn-play01-2x-x: 0px;
$s-btn-play01-2x-y: 0px;
$s-btn-play01-2x-offset-x: 0px;
$s-btn-play01-2x-offset-y: 0px;
$s-btn-play01-2x-width: 162px;
$s-btn-play01-2x-height: 58px;
$s-btn-play01-2x-total-width: 260px;
$s-btn-play01-2x-total-height: 196px;
$s-btn-play01-2x-image: '/assets/images/sprites@2x.png';
$s-btn-play01-2x: (0px, 0px, 0px, 0px, 162px, 58px, 260px, 196px, '/assets/images/sprites@2x.png', 's-btn_play01@2x', );
$s-icon-deductions-2x-name: 's-icon_deductions@2x';
$s-icon-deductions-2x-x: 172px;
$s-icon-deductions-2x-y: 98px;
$s-icon-deductions-2x-offset-x: -172px;
$s-icon-deductions-2x-offset-y: -98px;
$s-icon-deductions-2x-width: 52px;
$s-icon-deductions-2x-height: 52px;
$s-icon-deductions-2x-total-width: 260px;
$s-icon-deductions-2x-total-height: 196px;
$s-icon-deductions-2x-image: '/assets/images/sprites@2x.png';
$s-icon-deductions-2x: (172px, 98px, -172px, -98px, 52px, 52px, 260px, 196px, '/assets/images/sprites@2x.png', 's-icon_deductions@2x', );
$s-icon-lead-2x-name: 's-icon_lead@2x';
$s-icon-lead-2x-x: 98px;
$s-icon-lead-2x-y: 68px;
$s-icon-lead-2x-offset-x: -98px;
$s-icon-lead-2x-offset-y: -68px;
$s-icon-lead-2x-width: 52px;
$s-icon-lead-2x-height: 52px;
$s-icon-lead-2x-total-width: 260px;
$s-icon-lead-2x-total-height: 196px;
$s-icon-lead-2x-image: '/assets/images/sprites@2x.png';
$s-icon-lead-2x: (98px, 68px, -98px, -68px, 52px, 52px, 260px, 196px, '/assets/images/sprites@2x.png', 's-icon_lead@2x', );
$s-icon-yinc-2x-name: 's-icon_yinc@2x';
$s-icon-yinc-2x-x: 0px;
$s-icon-yinc-2x-y: 166px;
$s-icon-yinc-2x-offset-x: 0px;
$s-icon-yinc-2x-offset-y: -166px;
$s-icon-yinc-2x-width: 34px;
$s-icon-yinc-2x-height: 30px;
$s-icon-yinc-2x-total-width: 260px;
$s-icon-yinc-2x-total-height: 196px;
$s-icon-yinc-2x-image: '/assets/images/sprites@2x.png';
$s-icon-yinc-2x: (0px, 166px, 0px, -166px, 34px, 30px, 260px, 196px, '/assets/images/sprites@2x.png', 's-icon_yinc@2x', );
$spritesheet-width: 130px;
$spritesheet-height: 98px;
$spritesheet-image: '/assets/images/sprites.png';
$spritesheet-sprites: ($s-btn-favorite, $s-btn-favorite-selected, $s-btn-play01, $s-icon-deductions, $s-icon-lead, $s-icon-yinc, );
$spritesheet: (130px, 98px, '/assets/images/sprites.png', $spritesheet-sprites, );
$retina-spritesheet-width: 260px;
$retina-spritesheet-height: 196px;
$retina-spritesheet-image: '/assets/images/sprites@2x.png';
$retina-spritesheet-sprites: ($s-btn-favorite-2x, $s-btn-favorite-selected-2x, $s-btn-play01-2x, $s-icon-deductions-2x, $s-icon-lead-2x, $s-icon-yinc-2x, );
$retina-spritesheet: (260px, 196px, '/assets/images/sprites@2x.png', $retina-spritesheet-sprites, );

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
$s-btn-favorite-group-name: 's-btn_favorite';
$s-btn-favorite-group: ('s-btn_favorite', $s-btn-favorite, $s-btn-favorite-2x, );
$s-btn-favorite-selected-group-name: 's-btn_favorite_selected';
$s-btn-favorite-selected-group: ('s-btn_favorite_selected', $s-btn-favorite-selected, $s-btn-favorite-selected-2x, );
$s-btn-play01-group-name: 's-btn_play01';
$s-btn-play01-group: ('s-btn_play01', $s-btn-play01, $s-btn-play01-2x, );
$s-icon-deductions-group-name: 's-icon_deductions';
$s-icon-deductions-group: ('s-icon_deductions', $s-icon-deductions, $s-icon-deductions-2x, );
$s-icon-lead-group-name: 's-icon_lead';
$s-icon-lead-group: ('s-icon_lead', $s-icon-lead, $s-icon-lead-2x, );
$s-icon-yinc-group-name: 's-icon_yinc';
$s-icon-yinc-group: ('s-icon_yinc', $s-icon-yinc, $s-icon-yinc-2x, );
$retina-groups: ($s-btn-favorite-group, $s-btn-favorite-selected-group, $s-btn-play01-group, $s-icon-deductions-group, $s-icon-lead-group, $s-icon-yinc-group, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
